/*
* generated by Xtext
*/
package robot.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class DslGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class RobotElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Robot");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRobotKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cComponentsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cInstancesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cInstancesIDeviceParserRuleCall_5_0 = (RuleCall)cInstancesAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cInstancesAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cInstancesIDeviceParserRuleCall_6_1_0 = (RuleCall)cInstancesAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Robot:
		//	"Robot" name=ID "{" //'Types' '{' Types+=Device ( "," Types+=Device)* '}' 
		//	"components" "{" instances+=IDevice ("," instances+=IDevice)* "}" "}";
		public ParserRule getRule() { return rule; }

		//"Robot" name=ID "{" //'Types' '{' Types+=Device ( "," Types+=Device)* '}' 
		//"components" "{" instances+=IDevice ("," instances+=IDevice)* "}" "}"
		public Group getGroup() { return cGroup; }

		//"Robot"
		public Keyword getRobotKeyword_0() { return cRobotKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		////'Types' '{' Types+=Device ( "," Types+=Device)* '}' 
		//"components"
		public Keyword getComponentsKeyword_3() { return cComponentsKeyword_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//instances+=IDevice
		public Assignment getInstancesAssignment_5() { return cInstancesAssignment_5; }

		//IDevice
		public RuleCall getInstancesIDeviceParserRuleCall_5_0() { return cInstancesIDeviceParserRuleCall_5_0; }

		//("," instances+=IDevice)*
		public Group getGroup_6() { return cGroup_6; }

		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }

		//instances+=IDevice
		public Assignment getInstancesAssignment_6_1() { return cInstancesAssignment_6_1; }

		//IDevice
		public RuleCall getInstancesIDeviceParserRuleCall_6_1_0() { return cInstancesIDeviceParserRuleCall_6_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class FonctionnaliteElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Fonctionnalite");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCaptureParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cActionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Fonctionnalite:
		//	Capture | Action;
		public ParserRule getRule() { return rule; }

		//Capture | Action
		public Alternatives getAlternatives() { return cAlternatives; }

		//Capture
		public RuleCall getCaptureParserRuleCall_0() { return cCaptureParserRuleCall_0; }

		//Action
		public RuleCall getActionParserRuleCall_1() { return cActionParserRuleCall_1; }
	}

	public class DeviceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Device");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDeviceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cRefFonctionAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cRefFonctionFonctionnaliteParserRuleCall_3_0_0 = (RuleCall)cRefFonctionAssignment_3_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Device:
		//	"Device" name=ID "{" (refFonction+=Fonctionnalite ";")+ "}";
		public ParserRule getRule() { return rule; }

		//"Device" name=ID "{" (refFonction+=Fonctionnalite ";")+ "}"
		public Group getGroup() { return cGroup; }

		//"Device"
		public Keyword getDeviceKeyword_0() { return cDeviceKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//(refFonction+=Fonctionnalite ";")+
		public Group getGroup_3() { return cGroup_3; }

		//refFonction+=Fonctionnalite
		public Assignment getRefFonctionAssignment_3_0() { return cRefFonctionAssignment_3_0; }

		//Fonctionnalite
		public RuleCall getRefFonctionFonctionnaliteParserRuleCall_3_0_0() { return cRefFonctionFonctionnaliteParserRuleCall_3_0_0; }

		//";"
		public Keyword getSemicolonKeyword_3_1() { return cSemicolonKeyword_3_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class IDeviceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IDevice");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeofAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeofIDTerminalRuleCall_0_0 = (RuleCall)cTypeofAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//IDevice:
		//	typeof=ID name=ID;
		public ParserRule getRule() { return rule; }

		//typeof=ID name=ID
		public Group getGroup() { return cGroup; }

		//typeof=ID
		public Assignment getTypeofAssignment_0() { return cTypeofAssignment_0; }

		//ID
		public RuleCall getTypeofIDTerminalRuleCall_0_0() { return cTypeofIDTerminalRuleCall_0_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class EJavaObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EJavaObject");
		private final Action cObjectAction = (Action)rule.eContents().get(1);
		
		/// * TODO: implement this rule and an appropriate IValueConverter * / EJavaObject:
		//	{Object};
		public ParserRule getRule() { return rule; }

		//{Object}
		public Action getObjectAction() { return cObjectAction; }
	}

	public class ObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Object");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cStringKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cIntegerKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cByteKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cDoubleKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cFloatKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cBooleanKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		
		//Object:
		//	"String" | "Integer" | "Byte" | "Double" | "Float" | "Boolean";
		public ParserRule getRule() { return rule; }

		//"String" | "Integer" | "Byte" | "Double" | "Float" | "Boolean"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"String"
		public Keyword getStringKeyword_0() { return cStringKeyword_0; }

		//"Integer"
		public Keyword getIntegerKeyword_1() { return cIntegerKeyword_1; }

		//"Byte"
		public Keyword getByteKeyword_2() { return cByteKeyword_2; }

		//"Double"
		public Keyword getDoubleKeyword_3() { return cDoubleKeyword_3; }

		//"Float"
		public Keyword getFloatKeyword_4() { return cFloatKeyword_4; }

		//"Boolean"
		public Keyword getBooleanKeyword_5() { return cBooleanKeyword_5; }
	}

	public class ParametreElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Parametre");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cParametreAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeEJavaObjectParserRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		private final Keyword cNumberSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		
		//Parametre:
		//	{Parametre} type=EJavaObject "#" name=ID;
		public ParserRule getRule() { return rule; }

		//{Parametre} type=EJavaObject "#" name=ID
		public Group getGroup() { return cGroup; }

		//{Parametre}
		public Action getParametreAction_0() { return cParametreAction_0; }

		//type=EJavaObject
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//EJavaObject
		public RuleCall getTypeEJavaObjectParserRuleCall_1_0() { return cTypeEJavaObjectParserRuleCall_1_0; }

		//"#"
		public Keyword getNumberSignKeyword_2() { return cNumberSignKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }
	}

	public class CaptureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Capture");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCaptureAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCaptureKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cListeParametresAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cListeParametresParametreParserRuleCall_4_0_0 = (RuleCall)cListeParametresAssignment_4_0.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cListeParametresAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cListeParametresParametreParserRuleCall_4_1_1_0 = (RuleCall)cListeParametresAssignment_4_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		
		//Capture:
		//	{Capture} "capture" name=ID //('type' type=EJavaObject)?
		//	"(" (ListeParametres+=Parametre ("," ListeParametres+=Parametre)* ")")?;
		public ParserRule getRule() { return rule; }

		//{Capture} "capture" name=ID //('type' type=EJavaObject)?
		//"(" (ListeParametres+=Parametre ("," ListeParametres+=Parametre)* ")")?
		public Group getGroup() { return cGroup; }

		//{Capture}
		public Action getCaptureAction_0() { return cCaptureAction_0; }

		//"capture"
		public Keyword getCaptureKeyword_1() { return cCaptureKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		////('type' type=EJavaObject)?
		//"("
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }

		//(ListeParametres+=Parametre ("," ListeParametres+=Parametre)* ")")?
		public Group getGroup_4() { return cGroup_4; }

		//ListeParametres+=Parametre
		public Assignment getListeParametresAssignment_4_0() { return cListeParametresAssignment_4_0; }

		//Parametre
		public RuleCall getListeParametresParametreParserRuleCall_4_0_0() { return cListeParametresParametreParserRuleCall_4_0_0; }

		//("," ListeParametres+=Parametre)*
		public Group getGroup_4_1() { return cGroup_4_1; }

		//","
		public Keyword getCommaKeyword_4_1_0() { return cCommaKeyword_4_1_0; }

		//ListeParametres+=Parametre
		public Assignment getListeParametresAssignment_4_1_1() { return cListeParametresAssignment_4_1_1; }

		//Parametre
		public RuleCall getListeParametresParametreParserRuleCall_4_1_1_0() { return cListeParametresParametreParserRuleCall_4_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_4_2() { return cRightParenthesisKeyword_4_2; }
	}

	public class ActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Action");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cActionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cActionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cReturnAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cReturnEJavaObjectParserRuleCall_2_0 = (RuleCall)cReturnAssignment_2.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftParenthesisKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cListeParametresAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cListeParametresParametreParserRuleCall_4_1_0 = (RuleCall)cListeParametresAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cListeParametresAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cListeParametresParametreParserRuleCall_4_2_1_0 = (RuleCall)cListeParametresAssignment_4_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		
		//Action:
		//	{Action} "action" return=EJavaObject name=ID ("(" ListeParametres+=Parametre ("," ListeParametres+=Parametre)* ")")?;
		public ParserRule getRule() { return rule; }

		//{Action} "action" return=EJavaObject name=ID ("(" ListeParametres+=Parametre ("," ListeParametres+=Parametre)* ")")?
		public Group getGroup() { return cGroup; }

		//{Action}
		public Action getActionAction_0() { return cActionAction_0; }

		//"action"
		public Keyword getActionKeyword_1() { return cActionKeyword_1; }

		//return=EJavaObject
		public Assignment getReturnAssignment_2() { return cReturnAssignment_2; }

		//EJavaObject
		public RuleCall getReturnEJavaObjectParserRuleCall_2_0() { return cReturnEJavaObjectParserRuleCall_2_0; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//("(" ListeParametres+=Parametre ("," ListeParametres+=Parametre)* ")")?
		public Group getGroup_4() { return cGroup_4; }

		//"("
		public Keyword getLeftParenthesisKeyword_4_0() { return cLeftParenthesisKeyword_4_0; }

		//ListeParametres+=Parametre
		public Assignment getListeParametresAssignment_4_1() { return cListeParametresAssignment_4_1; }

		//Parametre
		public RuleCall getListeParametresParametreParserRuleCall_4_1_0() { return cListeParametresParametreParserRuleCall_4_1_0; }

		//("," ListeParametres+=Parametre)*
		public Group getGroup_4_2() { return cGroup_4_2; }

		//","
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }

		//ListeParametres+=Parametre
		public Assignment getListeParametresAssignment_4_2_1() { return cListeParametresAssignment_4_2_1; }

		//Parametre
		public RuleCall getListeParametresParametreParserRuleCall_4_2_1_0() { return cListeParametresParametreParserRuleCall_4_2_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_4_3() { return cRightParenthesisKeyword_4_3; }
	}
	
	
	private RobotElements pRobot;
	private FonctionnaliteElements pFonctionnalite;
	private DeviceElements pDevice;
	private IDeviceElements pIDevice;
	private EJavaObjectElements pEJavaObject;
	private ObjectElements pObject;
	private ParametreElements pParametre;
	private CaptureElements pCapture;
	private ActionElements pAction;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public DslGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("robot.Dsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Robot:
	//	"Robot" name=ID "{" //'Types' '{' Types+=Device ( "," Types+=Device)* '}' 
	//	"components" "{" instances+=IDevice ("," instances+=IDevice)* "}" "}";
	public RobotElements getRobotAccess() {
		return (pRobot != null) ? pRobot : (pRobot = new RobotElements());
	}
	
	public ParserRule getRobotRule() {
		return getRobotAccess().getRule();
	}

	//Fonctionnalite:
	//	Capture | Action;
	public FonctionnaliteElements getFonctionnaliteAccess() {
		return (pFonctionnalite != null) ? pFonctionnalite : (pFonctionnalite = new FonctionnaliteElements());
	}
	
	public ParserRule getFonctionnaliteRule() {
		return getFonctionnaliteAccess().getRule();
	}

	//Device:
	//	"Device" name=ID "{" (refFonction+=Fonctionnalite ";")+ "}";
	public DeviceElements getDeviceAccess() {
		return (pDevice != null) ? pDevice : (pDevice = new DeviceElements());
	}
	
	public ParserRule getDeviceRule() {
		return getDeviceAccess().getRule();
	}

	//IDevice:
	//	typeof=ID name=ID;
	public IDeviceElements getIDeviceAccess() {
		return (pIDevice != null) ? pIDevice : (pIDevice = new IDeviceElements());
	}
	
	public ParserRule getIDeviceRule() {
		return getIDeviceAccess().getRule();
	}

	/// * TODO: implement this rule and an appropriate IValueConverter * / EJavaObject:
	//	{Object};
	public EJavaObjectElements getEJavaObjectAccess() {
		return (pEJavaObject != null) ? pEJavaObject : (pEJavaObject = new EJavaObjectElements());
	}
	
	public ParserRule getEJavaObjectRule() {
		return getEJavaObjectAccess().getRule();
	}

	//Object:
	//	"String" | "Integer" | "Byte" | "Double" | "Float" | "Boolean";
	public ObjectElements getObjectAccess() {
		return (pObject != null) ? pObject : (pObject = new ObjectElements());
	}
	
	public ParserRule getObjectRule() {
		return getObjectAccess().getRule();
	}

	//Parametre:
	//	{Parametre} type=EJavaObject "#" name=ID;
	public ParametreElements getParametreAccess() {
		return (pParametre != null) ? pParametre : (pParametre = new ParametreElements());
	}
	
	public ParserRule getParametreRule() {
		return getParametreAccess().getRule();
	}

	//Capture:
	//	{Capture} "capture" name=ID //('type' type=EJavaObject)?
	//	"(" (ListeParametres+=Parametre ("," ListeParametres+=Parametre)* ")")?;
	public CaptureElements getCaptureAccess() {
		return (pCapture != null) ? pCapture : (pCapture = new CaptureElements());
	}
	
	public ParserRule getCaptureRule() {
		return getCaptureAccess().getRule();
	}

	//Action:
	//	{Action} "action" return=EJavaObject name=ID ("(" ListeParametres+=Parametre ("," ListeParametres+=Parametre)* ")")?;
	public ActionElements getActionAccess() {
		return (pAction != null) ? pAction : (pAction = new ActionElements());
	}
	
	public ParserRule getActionRule() {
		return getActionAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
